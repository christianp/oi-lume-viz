---
layout: layout/base.njk
title: Virtual columns
---

<h1>{{ title }}</h1>

<p>Sometimes your data source may not be in quite the format you need for your visualisation. For instance, say that you'd like to include a functioning weblink in a column of a table or in a tooltip. Virtual columns to the rescue.</p>



<p>A virtual column can be build from existing column values that exist in the data. So, if your data source contains a column titled <code>Title</code> and a column titled <code>URL</code> we could build a new column named <code>Link</code> using e.g.:</p>

<pre><code class="hljs language-yaml">columns:
  - name: 'Link'
    template: '{% raw %}&lt;a href="{{ URL }}"&gt;{{ Title }}&lt;/a&gt;{% endraw %}'
</code></pre>

<p>Virtual columns must have a <code>name</code> and <code>template</code> which can include any existing columns from the data. The <code>template</code> can make use of <a href="../templates/">string templates</a> and can use the following filters:

<ul>
	<li><code>toFixed(n)</code> - to limit a value to n decimal places</li>
	<li><code>multiply(n)</code> - to multiply a value by n</li>
	<li><code>toLocaleString()</code> - to use the locale's (of the server) preferred formatting for a value</li>
	<li><code>colourScale(scale,min,max)</code> - get a colour to, for example, use as a background style</li>
	<li><code>contrastColour</code> - get a contrasting colour (black or white)</li>
</ul>

<p>Defining <code>columns</code> with a template is also a simple way to rename a column heading.</p>